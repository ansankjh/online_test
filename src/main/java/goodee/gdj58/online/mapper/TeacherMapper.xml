<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.gdj58.online.mapper.TeacherMapper">
	
	<!-- 시험문제 보기 출력 -->
	<select id="selectExampleByTeacher" parameterType="int" resultType="java.util.Map">
		SELECT
			e.example_no exampleNo
			, e.question_no questionNo
			, e.example_idx exampleIdx
			, e.example_title exampleTitle
			, e.example_ox exampleOx
		FROM example e 
		INNER JOIN question q
		ON e.question_no = q.question_no
		WHERE q.test_no = #{testNo}
	</select>
	
	<!-- 시험문제 출력 -->
	<select id="selectQuestionByTeacher" parameterType="int" resultType="java.util.Map">
		SELECT 
			question_no questionNo
			, test_no testNo
			, question_idx questionIdx
			, question_title questionTitle
		FROM question 
		WHERE test_no=#{testNo}
	</select>
	
	<!-- 시험문제 등록 -->
	<insert id="insertQuestion" parameterType="goodee.gdj58.online.vo.Question">
		INSERT INTO question(
			test_no
			, question_idx
			, question_title
		) VALUES(
			#{testNo}
			, #{questionIdx}
			, #{questionTitle}
		)
	</insert>
	
	<!-- 보기 등록 -->
	<insert id="insertExample" parameterType="goodee.gdj58.online.vo.Example">
		INSERT INTO example(
			question_no
			, example_idx
			, example_title
			, example_ox
		) VALUES(
			#{questionNo}
			, #{exampleIdx}
			, #{exampleTitle}
			, #{exampleOx}
		)
	</insert>
	
	<!-- 시험회차 삭제 -->
	<delete id="deleteTest" parameterType="int">
		DELETE FROM test WHERE test_no=#{testNo}
	</delete>
	
	<!-- 시험회차 수정을 위한 조회 -->
	<select id="selectTestByUpdate" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			t.test_no testNo
			, t.test_title testTitle
			, tc.teacher_name teacherName
		FROM test t 
		INNER JOIN teacher tc
		ON t.teacher_no = tc.teacher_no
		WHERE t.test_no = #{testNo}
	</select>
	
	<!-- 시험회차 수정 -->
	<update id="updateTest" parameterType="goodee.gdj58.online.vo.Test">
		UPDATE test SET test_title = #{testTitle} WHERE test_no = #{testNo}
	</update>
	
	<!-- 시험회차 등록 -->
	<insert id="insertTest" parameterType="goodee.gdj58.online.vo.Test">
		INSERT INTO test (
			test_title, test_date, teacher_no
		) VALUES (
			#{testTitle}, CURDATE(), #{teacherNo}
		)
	</insert>
	
	<!-- 시험회차 목록 수 -->
	<select id="selectTestCountByTeacher" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT
			COUNT(*)
		FROM test
		<where>
			<if test="searchWord != null || searchWord != ''">
				test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>

	<!-- 시험회차 목록 -->
	<select id="selectTestListByTeacher" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			t.test_no testNo
			, t.test_title testTitle
			, t.test_date testDate
			, tc.teacher_name teacherName
		FROM test t 
		INNER JOIN teacher tc
		ON t.teacher_no = tc.teacher_no
		<where>
			<if test="searchWord != null || searchWord != ''">
				t.test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		ORDER BY t.test_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>

	<!-- 비밀번호 수정 -->
	<update id="updateTeacherPw" parameterType="java.util.Map">
		UPDATE teacher SET teacher_pw = PASSWORD(#{newPw}) WHERE teacher_no=#{teacherNo} AND teacher_pw=PASSWORD(#{oldPw})
	</update>
	
	<!-- 선생님 로그인 -->
	<select id="loginTeacher" parameterType="goodee.gdj58.online.vo.Teacher" resultType="goodee.gdj58.online.vo.Teacher">
		SELECT 
			teacher_no teacherNo
			, teacher_id teacherId
			, teacher_name teacherName 
		FROM teacher 
		WHERE teacher_id=#{teacherId} AND teacher_pw=PASSWORD(#{teacherPw}) 
	</select>

	<!-- 선생님 삭제 -->
	<delete id="deleteTeacher" parameterType="int">
		DELETE FROM teacher WHERE teacher_no = #{teacherNo}
	</delete>
	
	<!-- 선생님 등록 -->
	<insert id="insertTeacher"
				parameterType="goodee.gdj58.online.vo.Teacher">
		INSERT INTO teacher(
			teacher_id
			, teacher_pw
			, teacher_name
		) VALUES (
			#{teacherId}
			, PASSWORD(#{teacherPw})
			, #{teacherName}
		)
	</insert>
	
	<!-- 선생님 목록수 -->
	<select id="selectTeacherCount"
				resultType="java.lang.Integer">
		SELECT COUNT(*) FROM teacher;
	</select>
	
	<!-- 선생님 목록 -->
	<select id="selectTeacherList"
				parameterType="java.util.Map"
				resultType="goodee.gdj58.online.vo.Teacher">
		SELECT
			teacher_no teacherNo		
			, teacher_id teacherId
			, teacher_name teacherName
		FROM teacher
		ORDER BY teacher_no DESC
		LIMIT #{beginRow}, #{rowPerPage};
	</select>
</mapper>