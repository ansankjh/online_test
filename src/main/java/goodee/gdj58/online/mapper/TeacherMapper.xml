<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.gdj58.online.mapper.TeacherMapper">
	
	<!-- 보기수정폼 -->
	<select id="selectExampleByModify" parameterType="int" resultType="goodee.gdj58.online.vo.Example">
		SELECT 
			example_no exampleNo
			, question_no questionNo
			, example_idx exampleIdx
			, example_title exampleTitle
			, example_ox exampleOx
		FROM example
		WHERE example_no = #{exampleNo}
	</select>
	
	<!-- 문제수정 -->
	<update id="updateQuestion" parameterType="goodee.gdj58.online.vo.Question">
		UPDATE question SET question_title = #{questionTitle} WHERE question_no=#{questionNo}
	</update>
	
	<!-- 보기삭제 -->
	<delete id="deleteExample" parameterType="int">
		DELETE FROM example WHERE example_no=#{exampleNo}
	</delete>
	
	<!-- 보기수정 -->
	<update id="updateExample" parameterType="goodee.gdj58.online.vo.Example">
		UPDATE example SET 
			example_title = #{exampleTitle}, example_ox = #{exampleOx} 
		WHERE example_no=#{exampleNo} AND question_no=#{questionNo}
	</update>
	
	<!-- 보기등록 -->
	<insert id="insertExample" parameterType="goodee.gdj58.online.vo.Example">
		INSERT INTO example(
			question_no, example_idx, example_title, example_ox
		) VALUES(
			#{questionNo}, #{exampleIdx}, #{exampleTitle}, #{exampleOx}
		)
	</insert>
	
	<!-- 보기목록 -->
	<select id="selectExampleList" parameterType="int" resultType="java.util.Map">
		SELECT
				e.example_no exampleNo
				, e.question_no questionNo
				, e.example_idx exampleIdx
				, e.example_title exampleTitle
				, e.example_ox exampleOx
				, q.test_no testNo
				, q.question_idx questionIdx
				, q.question_title questionTitle
		FROM example e 
		INNER JOIN question q
		ON e.question_no = q.question_no
		WHERE e.question_no = #{questionNo}
	</select>
	
	<!-- 보기 페이지에 questionTitle -->
	<select id="selectQuestion" parameterType="int" resultType="goodee.gdj58.online.vo.Question">
		SELECT
				question_no questionNo
				, test_no testNo
				, question_idx questionIdx
				, question_title questionTitle
		FROM question
		WHERE question_no=#{questionNo}
	</select>
	
	<!-- 문제삭제 -->
	<delete id="deleteQuestion" parameterType="int">
		DELETE FROM question WHERE question_no = #{questionNo}
	</delete>
	
	<!-- test -->
	<select id="selectTest" parameterType="int" resultType="goodee.gdj58.online.vo.Test">
		SELECT
			test_no testNo
			, test_title testTitle
			, test_date testDate
			, teacher_No teacherNo
		FROM test
		WHERE test_no = #{testNo}
	</select>
	
	<!-- 문제등록 -->
	<insert id="insertQuestion" parameterType="goodee.gdj58.online.vo.Question">
		INSERT INTO question(
			test_no, question_idx, question_title
		) VALUES(
			#{testNo}, #{questionIdx}, #{questionTitle}
		)
	</insert>
	
	<!-- 시험문제목록 -->
	<select id="selectQuestionList" parameterType="int" resultType="goodee.gdj58.online.vo.Question">
		SELECT
			q.question_no questionNo
			, q.question_idx questionIdx
			, q.question_title questionTitle
			, t.test_no testNo
			, t.test_title testTitle
		FROM question q 
		INNER JOIN test t 
		ON q.test_no = t.test_no
		WHERE t.test_no = #{testNo}
	</select>
	
	<!-- 시험회차 수정 -->
	<update id="updateTest" parameterType="goodee.gdj58.online.vo.Test">
		UPDATE test SET test_title = #{testTitle} WHERE test_no = #{testNo}
	</update>
	
	<!-- 시험회차 삭제 -->
	<delete id="deleteTest" parameterType="int">
		DELETE FROM test WHERE test_no=#{testNo}
	</delete>
	
	<!-- 시험회차 삭제시 문제 유무 확인 -->
	<select id="selectQuestionIdx" parameterType="int" resultType="goodee.gdj58.online.vo.Question">
		SELECT question_idx questionIdx FROM question WHERE test_no = #{testNo}
	</select>
	
	<!-- 시험회차 등록 -->
	<insert id="insertTest" parameterType="goodee.gdj58.online.vo.Test">
		INSERT INTO test(
			test_title, test_date, teacher_no
		) VALUES(
			#{testTitle}, CURDATE(), #{teacherNo}
		)
	</insert>
	
	<!-- 시험회차 목록 수 -->
	<select id="selectTestCountByTeacher" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT
			COUNT(*)
		FROM test
		<where>
			<if test="searchWord != null || searchWord != ''">
				test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>

	<!-- 시험회차 목록 -->
	<select id="selectTestListByTeacher" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			t.test_no testNo
			, t.test_title testTitle
			, t.test_date testDate
			, tc.teacher_name teacherName
		FROM test t 
		INNER JOIN teacher tc
		ON t.teacher_no = tc.teacher_no
		<where>
			<if test="searchWord != null || searchWord != ''">
				t.test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		ORDER BY t.test_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 기존비밀번호 확인(사원 비밀번호 변경시) -->
	<select id="selectTeacher" parameterType="java.util.Map" resultType="goodee.gdj58.online.vo.Teacher">
		SELECT 
				teacher_no teacherNo
				, teacher_id teacherId
				, teacher_name teacherName
		FROM teacher
		WHERE teacher_id = #{teacherId} AND teacher_pw = PASSWORD(#{oldPw})
	</select>
	
	<!-- 비밀번호 수정 -->
	<update id="updateTeacherPw" parameterType="java.util.Map">
		UPDATE 
			teacher SET teacher_pw = PASSWORD(#{newPw}) 
			WHERE teacher_id=#{teacherId} AND teacher_pw=PASSWORD(#{oldPw})
	</update>
	
	<!-- 선생님 로그인 -->
	<select id="loginTeacher" parameterType="goodee.gdj58.online.vo.Teacher" resultType="goodee.gdj58.online.vo.Teacher">
		SELECT 
			teacher_no teacherNo
			, teacher_id teacherId
			, teacher_name teacherName 
		FROM teacher 
		WHERE teacher_id=#{teacherId} AND teacher_pw=PASSWORD(#{teacherPw})
	</select>

	<!-- 선생님 삭제 -->
	<delete id="deleteTeacher" parameterType="int">
		DELETE FROM teacher WHERE teacher_no = #{teacherNo}
	</delete>
	
	<!-- 선생님 등록 -->
	<insert id="insertTeacher"
				parameterType="goodee.gdj58.online.vo.Teacher">
		INSERT INTO teacher(
			teacher_id
			, teacher_pw
			, teacher_name
		) VALUES (
			#{teacherId}
			, PASSWORD(#{teacherPw})
			, #{teacherName}
		)
	</insert>
	
	<!-- 선생님 아이디 중복체크 -->
	<select id="selectTeacherId" parameterType="string" resultType="string">
		SELECT
			teacher_id teacherId
		FROM teacher
		WHERE teacher_id = #{teacherId}
	</select>
		
	<!-- 선생님 목록수 -->
	<select id="selectTeacherCount"
				resultType="java.lang.Integer">
		SELECT COUNT(*) FROM teacher;
	</select>
	
	<!-- 선생님 목록 -->
	<select id="selectTeacherList"
				parameterType="java.util.Map"
				resultType="goodee.gdj58.online.vo.Teacher">
		SELECT
			teacher_no teacherNo		
			, teacher_id teacherId
			, teacher_name teacherName
		FROM teacher
		ORDER BY teacher_no DESC
		LIMIT #{beginRow}, #{rowPerPage};
	</select>
</mapper>